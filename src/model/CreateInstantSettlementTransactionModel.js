/**
 * YouLend Third Party Instant Settlement API
 * Through this API you can can create Instant Settlement transactions with YouLend
 *
 * The version of the OpenAPI document: v1.0
 * Contact: mark.ufland@youlend.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateInstantSettlementTransactionModel model module.
 * @module model/CreateInstantSettlementTransactionModel
 * @version v1.0
 */
class CreateInstantSettlementTransactionModel {
    /**
     * Constructs a new <code>CreateInstantSettlementTransactionModel</code>.
     * Model for creating a instant settlement transaction
     * @alias module:model/CreateInstantSettlementTransactionModel
     * @param transactionReferences {Array.<String>} Gets or sets a list of transaction references
     */
    constructor(transactionReferences) { 
        
        CreateInstantSettlementTransactionModel.initialize(this, transactionReferences);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transactionReferences) { 
        obj['transactionReferences'] = transactionReferences;
    }

    /**
     * Constructs a <code>CreateInstantSettlementTransactionModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateInstantSettlementTransactionModel} obj Optional instance to populate.
     * @return {module:model/CreateInstantSettlementTransactionModel} The populated <code>CreateInstantSettlementTransactionModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateInstantSettlementTransactionModel();

            if (data.hasOwnProperty('transactionReferences')) {
                obj['transactionReferences'] = ApiClient.convertToType(data['transactionReferences'], ['String']);
            }
            if (data.hasOwnProperty('currencyISOCode')) {
                obj['currencyISOCode'] = ApiClient.convertToType(data['currencyISOCode'], 'String');
            }
            if (data.hasOwnProperty('totalSettlementAmount')) {
                obj['totalSettlementAmount'] = ApiClient.convertToType(data['totalSettlementAmount'], 'Number');
            }
            if (data.hasOwnProperty('transactionDate')) {
                obj['transactionDate'] = ApiClient.convertToType(data['transactionDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Gets or sets a list of transaction references
 * @member {Array.<String>} transactionReferences
 */
CreateInstantSettlementTransactionModel.prototype['transactionReferences'] = undefined;

/**
 * Gets or sets Currency ISO code string
 * @member {String} currencyISOCode
 */
CreateInstantSettlementTransactionModel.prototype['currencyISOCode'] = undefined;

/**
 * Gets or sets Total settlement amount
 * @member {Number} totalSettlementAmount
 */
CreateInstantSettlementTransactionModel.prototype['totalSettlementAmount'] = undefined;

/**
 * Gets or sets transaction date  (needs to be within the settlement cycle length specified for each Instant Settlement)
 * @member {Date} transactionDate
 */
CreateInstantSettlementTransactionModel.prototype['transactionDate'] = undefined;






export default CreateInstantSettlementTransactionModel;

